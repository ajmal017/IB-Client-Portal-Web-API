/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AccountApiTests
    {
        private AccountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccountApi
            //Assert.IsInstanceOfType(typeof(AccountApi), instance, "instance is a AccountApi");
        }

        
        /// <summary>
        /// Test IserverAccountPnlPartitionedGet
        /// </summary>
        [Test]
        public void IserverAccountPnlPartitionedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IserverAccountPnlPartitionedGet();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountPost
        /// </summary>
        [Test]
        public void IserverAccountPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetAccount body = null;
            //var response = instance.IserverAccountPost(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountsGet
        /// </summary>
        [Test]
        public void IserverAccountsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IserverAccountsGet();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdLedgerGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdLedgerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdLedgerGet(accountId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdMetaGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdMetaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdMetaGet(accountId);
            //Assert.IsInstanceOf<Accounts> (response, "response is Accounts");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdSummaryGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdSummaryGet(accountId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountsGet
        /// </summary>
        [Test]
        public void PortfolioAccountsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PortfolioAccountsGet();
            //Assert.IsInstanceOf<Accounts> (response, "response is Accounts");
        }
        
        /// <summary>
        /// Test PortfolioSubaccountsGet
        /// </summary>
        [Test]
        public void PortfolioSubaccountsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PortfolioSubaccountsGet();
            //Assert.IsInstanceOf<Account> (response, "response is Account");
        }
        
    }

}
