/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AlertApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AlertApiTests
    {
        private AlertApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AlertApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AlertApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AlertApi
            //Assert.IsInstanceOfType(typeof(AlertApi), instance, "instance is a AlertApi");
        }

        
        /// <summary>
        /// Test IserverAccountAccountIdAlertActivatePost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdAlertActivatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //Body body = null;
            //var response = instance.IserverAccountAccountIdAlertActivatePost(accountId, body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdAlertAlertIdDelete
        /// </summary>
        [Test]
        public void IserverAccountAccountIdAlertAlertIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string alertId = null;
            //var response = instance.IserverAccountAccountIdAlertAlertIdDelete(accountId, alertId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdAlertPost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdAlertPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //AlertRequest body = null;
            //var response = instance.IserverAccountAccountIdAlertPost(accountId, body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdAlertsGet
        /// </summary>
        [Test]
        public void IserverAccountAccountIdAlertsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.IserverAccountAccountIdAlertsGet(accountId);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverAccountAlertIdGet
        /// </summary>
        [Test]
        public void IserverAccountAlertIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.IserverAccountAlertIdGet(id);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        
        /// <summary>
        /// Test IserverAccountMtaGet
        /// </summary>
        [Test]
        public void IserverAccountMtaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IserverAccountMtaGet();
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        
    }

}
