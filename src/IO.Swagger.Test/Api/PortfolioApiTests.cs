/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PortfolioApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PortfolioApiTests
    {
        private PortfolioApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PortfolioApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PortfolioApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PortfolioApi
            //Assert.IsInstanceOfType(typeof(PortfolioApi), instance, "instance is a PortfolioApi");
        }

        
        /// <summary>
        /// Test PortfolioAccountIdAllocationGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdAllocationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdAllocationGet(accountId);
            //Assert.IsInstanceOf<Allocation> (response, "response is Allocation");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdLedgerGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdLedgerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdLedgerGet(accountId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdMetaGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdMetaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdMetaGet(accountId);
            //Assert.IsInstanceOf<Accounts> (response, "response is Accounts");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdPositionConidGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdPositionConidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //int? conid = null;
            //var response = instance.PortfolioAccountIdPositionConidGet(accountId, conid);
            //Assert.IsInstanceOf<Position> (response, "response is Position");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdPositionsInvalidatePost
        /// </summary>
        [Test]
        public void PortfolioAccountIdPositionsInvalidatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdPositionsInvalidatePost(accountId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdPositionsPageIdGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdPositionsPageIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string pageId = null;
            //string model = null;
            //string sort = null;
            //string direction = null;
            //string period = null;
            //var response = instance.PortfolioAccountIdPositionsPageIdGet(accountId, pageId, model, sort, direction, period);
            //Assert.IsInstanceOf<Position> (response, "response is Position");
        }
        
        /// <summary>
        /// Test PortfolioAccountIdSummaryGet
        /// </summary>
        [Test]
        public void PortfolioAccountIdSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //var response = instance.PortfolioAccountIdSummaryGet(accountId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioAccountsGet
        /// </summary>
        [Test]
        public void PortfolioAccountsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PortfolioAccountsGet();
            //Assert.IsInstanceOf<Accounts> (response, "response is Accounts");
        }
        
        /// <summary>
        /// Test PortfolioAllocationPost
        /// </summary>
        [Test]
        public void PortfolioAllocationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Body body = null;
            //var response = instance.PortfolioAllocationPost(body);
            //Assert.IsInstanceOf<Allocation> (response, "response is Allocation");
        }
        
        /// <summary>
        /// Test PortfolioPositionsConidGet
        /// </summary>
        [Test]
        public void PortfolioPositionsConidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? conid = null;
            //var response = instance.PortfolioPositionsConidGet(conid);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PortfolioSubaccountsGet
        /// </summary>
        [Test]
        public void PortfolioSubaccountsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PortfolioSubaccountsGet();
            //Assert.IsInstanceOf<Account> (response, "response is Account");
        }
        
    }

}
