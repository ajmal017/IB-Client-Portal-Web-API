/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MarketDataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MarketDataApiTests
    {
        private MarketDataApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MarketDataApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MarketDataApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MarketDataApi
            //Assert.IsInstanceOfType(typeof(MarketDataApi), instance, "instance is a MarketDataApi");
        }

        
        /// <summary>
        /// Test IserverMarketdataConidUnsubscribeGet
        /// </summary>
        [Test]
        public void IserverMarketdataConidUnsubscribeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string conid = null;
            //var response = instance.IserverMarketdataConidUnsubscribeGet(conid);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverMarketdataHistoryGet
        /// </summary>
        [Test]
        public void IserverMarketdataHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string conid = null;
            //string period = null;
            //string exchange = null;
            //string bar = null;
            //bool? outsideRth = null;
            //var response = instance.IserverMarketdataHistoryGet(conid, period, exchange, bar, outsideRth);
            //Assert.IsInstanceOf<HistoryData> (response, "response is HistoryData");
        }
        
        /// <summary>
        /// Test IserverMarketdataSnapshotGet
        /// </summary>
        [Test]
        public void IserverMarketdataSnapshotGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string conids = null;
            //int? since = null;
            //string fields = null;
            //var response = instance.IserverMarketdataSnapshotGet(conids, since, fields);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverMarketdataUnsubscribeallGet
        /// </summary>
        [Test]
        public void IserverMarketdataUnsubscribeallGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IserverMarketdataUnsubscribeallGet();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}
