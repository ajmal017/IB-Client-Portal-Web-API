/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderApiTests
    {
        private OrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderApi
            //Assert.IsInstanceOfType(typeof(OrderApi), instance, "instance is a OrderApi");
        }

        
        /// <summary>
        /// Test IserverAccountAccountIdOrderOrderIdDelete
        /// </summary>
        [Test]
        public void IserverAccountAccountIdOrderOrderIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string orderId = null;
            //var response = instance.IserverAccountAccountIdOrderOrderIdDelete(accountId, orderId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdOrderOrderIdPost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdOrderOrderIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string orderId = null;
            //ModifyOrder body = null;
            //var response = instance.IserverAccountAccountIdOrderOrderIdPost(accountId, orderId, body);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdOrderPost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdOrderPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //OrderRequest body = null;
            //var response = instance.IserverAccountAccountIdOrderPost(accountId, body);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdOrderWhatifPost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdOrderWhatifPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //OrderRequest body = null;
            //var response = instance.IserverAccountAccountIdOrderWhatifPost(accountId, body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverAccountAccountIdOrdersPost
        /// </summary>
        [Test]
        public void IserverAccountAccountIdOrdersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //Body body = null;
            //var response = instance.IserverAccountAccountIdOrdersPost(accountId, body);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverAccountOrdersFaGroupPost
        /// </summary>
        [Test]
        public void IserverAccountOrdersFaGroupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string faGroup = null;
            //OrderRequest body = null;
            //var response = instance.IserverAccountOrdersFaGroupPost(faGroup, body);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
        /// <summary>
        /// Test IserverAccountOrdersGet
        /// </summary>
        [Test]
        public void IserverAccountOrdersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Body body = null;
            //var response = instance.IserverAccountOrdersGet(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test IserverReplyReplyidPost
        /// </summary>
        [Test]
        public void IserverReplyReplyidPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string replyid = null;
            //Body body = null;
            //var response = instance.IserverReplyReplyidPost(replyid, body);
            //Assert.IsInstanceOf<List<Object>> (response, "response is List<Object>");
        }
        
    }

}
