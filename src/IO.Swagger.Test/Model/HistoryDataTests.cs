/* 
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing HistoryData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class HistoryDataTests
    {
        // TODO uncomment below to declare an instance variable for HistoryData
        //private HistoryData instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of HistoryData
            //instance = new HistoryData();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HistoryData
        /// </summary>
        [Test]
        public void HistoryDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" HistoryData
            //Assert.IsInstanceOfType<HistoryData> (instance, "variable 'instance' is a HistoryData");
        }


        /// <summary>
        /// Test the property 'Symbol'
        /// </summary>
        [Test]
        public void SymbolTest()
        {
            // TODO unit test for the property 'Symbol'
        }
        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Test]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'PriceFactor'
        /// </summary>
        [Test]
        public void PriceFactorTest()
        {
            // TODO unit test for the property 'PriceFactor'
        }
        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Test]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }
        /// <summary>
        /// Test the property 'High'
        /// </summary>
        [Test]
        public void HighTest()
        {
            // TODO unit test for the property 'High'
        }
        /// <summary>
        /// Test the property 'Low'
        /// </summary>
        [Test]
        public void LowTest()
        {
            // TODO unit test for the property 'Low'
        }
        /// <summary>
        /// Test the property 'TimePeriod'
        /// </summary>
        [Test]
        public void TimePeriodTest()
        {
            // TODO unit test for the property 'TimePeriod'
        }
        /// <summary>
        /// Test the property 'BarLength'
        /// </summary>
        [Test]
        public void BarLengthTest()
        {
            // TODO unit test for the property 'BarLength'
        }
        /// <summary>
        /// Test the property 'MdAvailability'
        /// </summary>
        [Test]
        public void MdAvailabilityTest()
        {
            // TODO unit test for the property 'MdAvailability'
        }
        /// <summary>
        /// Test the property 'MktDataDelay'
        /// </summary>
        [Test]
        public void MktDataDelayTest()
        {
            // TODO unit test for the property 'MktDataDelay'
        }
        /// <summary>
        /// Test the property 'OutsideRth'
        /// </summary>
        [Test]
        public void OutsideRthTest()
        {
            // TODO unit test for the property 'OutsideRth'
        }
        /// <summary>
        /// Test the property 'TradingDayDuration'
        /// </summary>
        [Test]
        public void TradingDayDurationTest()
        {
            // TODO unit test for the property 'TradingDayDuration'
        }
        /// <summary>
        /// Test the property 'VolumeFactor'
        /// </summary>
        [Test]
        public void VolumeFactorTest()
        {
            // TODO unit test for the property 'VolumeFactor'
        }
        /// <summary>
        /// Test the property 'PriceDisplayRule'
        /// </summary>
        [Test]
        public void PriceDisplayRuleTest()
        {
            // TODO unit test for the property 'PriceDisplayRule'
        }
        /// <summary>
        /// Test the property 'PriceDisplayValue'
        /// </summary>
        [Test]
        public void PriceDisplayValueTest()
        {
            // TODO unit test for the property 'PriceDisplayValue'
        }
        /// <summary>
        /// Test the property 'NegativeCapable'
        /// </summary>
        [Test]
        public void NegativeCapableTest()
        {
            // TODO unit test for the property 'NegativeCapable'
        }
        /// <summary>
        /// Test the property 'MessageVersion'
        /// </summary>
        [Test]
        public void MessageVersionTest()
        {
            // TODO unit test for the property 'MessageVersion'
        }
        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Test]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }
        /// <summary>
        /// Test the property 'Points'
        /// </summary>
        [Test]
        public void PointsTest()
        {
            // TODO unit test for the property 'Points'
        }
        /// <summary>
        /// Test the property 'TravelTime'
        /// </summary>
        [Test]
        public void TravelTimeTest()
        {
            // TODO unit test for the property 'TravelTime'
        }

    }

}
